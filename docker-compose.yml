networks:
  guidehouse-network:
    name: ingest-network
    driver: bridge

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: temporal
      POSTGRES_PASSWORD: temporal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U temporal"]
      interval: 5s
      timeout: 5s
      retries: 20
    networks:
      - ingest-network

  temporal:
    image: temporalio/auto-setup:latest
    environment:
      DB: postgresql
      DB_PORT: 5432
      POSTGRES_SEEDS: postgres
      POSTGRES_USER: temporal
      POSTGRES_PWD: temporal
      POSTGRES_DB: temporal
      DYNAMIC_CONFIG_FILE_PATH: /etc/temporal/dynamicconfig/temporal.yaml
    ports:
      - "7233:7233"
    volumes:
      - ./temporal/dynamicconfig:/etc/temporal/dynamicconfig
    networks:
      - ingest-network

  temporal-worker:
    build: .
    container_name: lore-ingestor-temporal-worker
    command: [ "python", "-m", "service.temporal_worker" ]
    environment:
      DB_PATH: /app/data/tropes.db
      TEMPORAL_TARGET: "temporal:7233"
      TEMPORAL_NAMESPACE: "default"
      TEMPORAL_TASK_QUEUE: "ingest-queue"
    volumes:
      - ./lore_ingest:/app/lore_ingest:ro
      - ./service:/app/service:ro
      - ./cli:/app/cli:ro
      - ./data:/app/data
    depends_on:
      - temporal
    networks:
      - ingest-network

  temporal-ui:
    image: temporalio/ui:latest
    environment:
      TEMPORAL_ADDRESS: temporal:7233
    ports:
      - "8233:8080"
    depends_on:
      - temporal
    networks:
      - ingest-network


  # add these services if you want to use Redis/NATS sinks
  redis:
    image: redis:7
    ports:
      - "6379:6379"
    networks:
      - ingest-network

  nats:
    image: nats:2
    command: [ "-js" ]   # enable JetStream (optional)
    ports:
      - "4222:4222"
    networks:
      - ingest-network


  pushgateway:
    image: prom/pushgateway:v1.7.0
    ports:
      - "9091:9091"
    command: [ "--web.listen-address=:9091" ]
    networks:
      - ingest-network

  http:
    build: .
    container_name: lore-ingestor-http
    environment:
      DB_PATH: /app/data/tropes.db
      INBOX: /app/inbox
      SUCCESS_DIR: /app/success
      FAIL_DIR: /app/fail
      # ---- events config ----
      EMIT_SINK: "stdout,redis,nats"   # any combo of stdout|http|redis|nats
      EMIT_HTTP_URL: "http://host.docker.internal:9000/webhook"  # if using http
      EMIT_REDIS_URL: "redis://redis:6379/0"
      EMIT_REDIS_LIST: "ingest_events"
      EMIT_NATS_URL: "nats://nats:4222"
      EMIT_NATS_SUBJECT: "ingest.events"
      PUSHGATEWAY_URL: "http://pushgateway:9091"
      PUSHGATEWAY_JOB: "lore-ingest-http"   # for http service; use lore-ingest-watcher for watcher, etc.
      PUSHGATEWAY_INSTANCE: "${HOSTNAME}"   # optional, becomes grouping key
      PUSHGATEWAY_MODE: "pushadd"           # default: pushadd
      TEMPORAL_ENABLED: "true"
      TEMPORAL_TARGET: "temporal:7233"
      TEMPORAL_NAMESPACE: "default"
      TEMPORAL_TASK_QUEUE: "ingest-queue"
    volumes:
      - ./lore_ingest:/app/lore_ingest:ro
      - ./service:/app/service:ro
      - ./cli:/app/cli:ro
      - ./data:/app/data
      - ./inbox:/app/inbox
      - ./success:/app/success
      - ./fail:/app/fail
    ports:
      - "8099:8099"
    command: [ "uvicorn", "service.http_app:app", "--host", "0.0.0.0", "--port", "8099" ]
    depends_on:
      - redis
      - nats
      - temporal
      - temporal-worker
    restart: unless-stopped
    networks:
      - ingest-network

  watcher:
    build: .
    container_name: lore-ingestor-watcher
    environment:
      DB_PATH: /app/data/tropes.db
      INBOX: /app/inbox
      SUCCESS_DIR: /app/success
      FAIL_DIR: /app/fail
      ALLOWED_EXT: ".txt,.md,.pdf,.docx"
      MAX_FILE_MB: "20"
      INGEST_PROFILE: "pdf_pages"
      # ---- events config ----
      EMIT_SINK: "stdout,redis,nats"
      EMIT_HTTP_URL: "http://host.docker.internal:9000/webhook"
      EMIT_REDIS_URL: "redis://redis:6379/0"
      EMIT_REDIS_LIST: "ingest_events"
      EMIT_NATS_URL: "nats://nats:4222"
      EMIT_NATS_SUBJECT: "ingest.events"
      PUSHGATEWAY_URL: "http://pushgateway:9091"
      PUSHGATEWAY_JOB: "lore-ingest-watcher"   # for http service; use lore-ingest-watcher for watcher, etc.
    volumes:
      - ./lore_ingest:/app/lore_ingest:ro
      - ./service:/app/service:ro
      - ./cli:/app/cli:ro
      - ./data:/app/data
      - ./inbox:/app/inbox
      - ./success:/app/success
      - ./fail:/app/fail
    command: [ "python", "-m", "cli.main", "watch" ]
    depends_on:
      - http
      - redis
      - nats
    restart: unless-stopped
    networks:
      - ingest-network



  # optional: only run if you actually want the Temporal worker in Docker
  worker:
    build:
      context: .
      target: worker     # ðŸ‘ˆ worker stage
    environment:
      DB_PATH: /app/data/tropes.db
      TEMPORAL_TARGET: "temporal:7233"
      TEMPORAL_NAMESPACE: default
      INGEST_TASK_QUEUE: ingest-queue
    volumes:
      - ./data:/app/data
    restart: unless-stopped
    networks:
      - ingest-network

